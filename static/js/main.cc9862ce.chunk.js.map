{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerId","setInterval","tick","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","setState","React","Component","defaultProps","App","isClockVisible","clockName","Math","ceil","random","showClock","hideClock","setNewName","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,OAEHC,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC7B,OAVP,gCAaE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DR,KAAKS,MAAMD,SAhBhF,kCAoBE,WACEE,cAAcV,KAAKC,WArBvB,kBAwBE,WACED,KAAKW,SAAS,CACZb,KAAM,IAAIC,SA1BhB,oBA8BE,WAAU,IACAD,EAASE,KAAKH,MAAdC,KAER,OACE,oCACGA,EAAKQ,0BAnCd,GAA2BM,IAAMC,WA6CjCjB,EAAMkB,aAAe,CACnBN,KAAM,G,UCFOO,E,4MAzCblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAWC,KAAKC,KAAqB,IAAhBD,KAAKE,W,EAG5BC,UAAY,kBAAM,EAAKV,SAAS,CAAEK,gBAAgB,K,EAElDM,UAAY,kBAAM,EAAKX,SAAS,CAAEK,gBAAgB,K,EAElDO,WAAa,kBAAM,EAAKZ,SAAS,CAC/BM,UAAWC,KAAKC,KAAqB,IAAhBD,KAAKE,a,4CAG5B,WAAU,IAAD,EAC+BpB,KAAKH,MAAnCmB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACA,4CAEE,8BACGR,GAAkB,kBAAC,EAAD,CAAOR,KAAMS,MAGpC,4BAAQQ,KAAK,SAASC,QAAS1B,KAAKqB,WAApC,cAIA,4BAAQI,KAAK,SAASC,QAAS1B,KAAKsB,WAApC,cAIA,4BAAQG,KAAK,SAASC,QAAS1B,KAAKuB,YAApC,wB,GAlCUX,IAAMC,WCDxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cc9862ce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.tick();\n      // eslint-disable-next-line\n        console.log(this.state.date.toLocaleTimeString())\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        {date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number,\n};\n\nClock.defaultProps = {\n  name: 0,\n};\n","// import { render } from 'node-sass';\nimport React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.ceil(Math.random() * 100),\n  };\n\n  showClock = () => this.setState({ isClockVisible: true });\n\n  hideClock = () => this.setState({ isClockVisible: false });\n\n  setNewName = () => this.setState({\n    clockName: Math.ceil(Math.random() * 100),\n  });\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          {`Current time: `}\n          <span>\n            {isClockVisible && <Clock name={clockName} />}\n          </span>\n        </p>\n        <button type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide clock\n        </button>\n\n        <button type=\"button\" onClick={this.setNewName}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}